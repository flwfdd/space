---
import ThemeToggle from "@/components/layouts/ThemeToggle.astro";
import { Icon } from "astro-icon/components";
const { class: className = "" } = Astro.props;

const menus = [
  {
    name: "笔记",
    href: "/notes",
  },
  {
    name: "博客",
    href: "https://blog.flwfdd.xyz",
  },
  {
    name: "关于",
    href: "/about",
  },
];
---

<header
  class={`
  w-full p-6
  ${className}
`}
>
  <nav class="max-w-6xl mx-auto flex items-center justify-between">
    <div class="flex items-center space-x-2">
      <ThemeToggle />
      <a href="/" class="text-2xl font-bold"> flwfdd'Space </a>
    </div>

    <!-- 桌面端导航菜单 -->
    <div class="hidden sm:flex items-center space-x-2">
      <ul class="flex space-x-2">
        {
          menus.map((menu) => (
            <li>
              <a
                href={menu.href}
                class="
              px-4 py-2 rounded-lg font-bold
              hover:text-cyan-600 hover:bg-cyan-500/10
              transition-all duration-100
            "
              >
                {menu.name}
              </a>
            </li>
          ))
        }
      </ul>
    </div>

    <!-- 移动端菜单按钮 -->
    <button
      id="mobile-menu-button"
      class="sm:hidden flex justify-center items-center"
      aria-label="打开菜单"
    >
      <Icon name="mdi:menu" class="size-6" />
    </button>
  </nav>

  <!-- 移动端全屏模糊遮罩菜单 -->
  <div
    id="mobile-menu-overlay"
    class="fixed inset-0 bg-cyan-50/50 dark:bg-cyan-900/50 backdrop-blur-lg z-50 opacity-0 pointer-events-none transition-all duration-500 md:hidden flex items-center justify-center"
  >
    <button
      id="mobile-menu-close"
      class="absolute top-8 right-8 size-6"
      aria-label="关闭菜单"
    >
      <Icon name="mdi:close" class="size-6" />
    </button>
    <div id="mobile-menu-content" class="rounded-2xl p-8 max-w-sm w-full mx-4">
      <nav>
        <ul class="space-y-4">
          {
            menus.map((menu) => (
              <li>
                <a
                  href={menu.href}
                  class="block px-6 w-full rounded-xl font-bold text-lg text-center mobile-menu-link"
                >
                  {menu.name}
                </a>
              </li>
            ))
          }
        </ul>
      </nav>
    </div>
  </div>
</header>

<script>
  // 移动端菜单交互逻辑
  const mobileMenuButton = document.getElementById("mobile-menu-button");
  const mobileMenuOverlay = document.getElementById("mobile-menu-overlay");
  const mobileMenuContent = document.getElementById("mobile-menu-content");
  const mobileMenuClose = document.getElementById("mobile-menu-close");
  const mobileMenuLinks = document.querySelectorAll(".mobile-menu-link");

  function openMobileMenu() {
    if (!mobileMenuOverlay || !mobileMenuContent || !mobileMenuButton) return;

    // 显示遮罩
    mobileMenuOverlay.classList.remove("opacity-0", "pointer-events-none");
    // 显示菜单内容（缩放和透明度动画）
    mobileMenuContent.classList.remove("scale-95", "opacity-0");
    mobileMenuContent.classList.add("scale-100", "opacity-100");
  }

  function closeMobileMenu() {
    if (!mobileMenuOverlay || !mobileMenuContent || !mobileMenuButton) return;

    // 隐藏遮罩
    mobileMenuOverlay.classList.add("opacity-0", "pointer-events-none");
    // 隐藏菜单内容（缩放和透明度动画）
    mobileMenuContent.classList.remove("scale-100", "opacity-100");
    mobileMenuContent.classList.add("scale-95", "opacity-0");
  }

  // 事件监听器
  mobileMenuButton?.addEventListener("click", openMobileMenu);
  mobileMenuClose?.addEventListener("click", closeMobileMenu);
  mobileMenuOverlay?.addEventListener("click", (e) => {
    if (e.target === mobileMenuOverlay) {
      closeMobileMenu();
    }
  });

  // 点击菜单链接后关闭菜单
  mobileMenuLinks.forEach((link) => {
    link.addEventListener("click", closeMobileMenu);
  });
</script>
